@{
    ViewBag.Title = "Home Page";

}
@ViewBag.Message
<!--Grid row-->
<div class="row wow fadeIn">

    <div class="col-md-12 mb-4">

        <!--Card-->
        <div class="card">

            <!--Card content-->
            <div class="card-body">
                <input type="hidden" id="idusuario" name="idusuario" value="@ViewBag.IdUsuario" />
                <input type="hidden" id="urlwebapi" name="urlwebapi" value="@ViewBag.UrlWebApi" />
                <!-- Table  -->
                <table class="table table-hover" id="tabla">
                    <!-- Table head -->
                    <thead class="blue lighten-4">
                        <tr>
                            <th>Thumbnails</th>
                            <th>Nombre</th>
                            <th>Detalles</th>
                            <th>Favorito</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var comics in Model) // foreach (comics)
                        {
                            <tr>
                                <th scope="row">
                                    <img src="@(comics.Thumbnail.Path+"/portrait_xlarge."+comics.Thumbnail.Extension ?? "~/content/images/placeholder.jpg")" alt="@comics.Title" />
                                </th>
                                <td>@comics.Title</td>
                                <td>
                                    <strong>Descripción: </strong><br /> @(comics.Description!=string.Empty ? comics.Description : "Sin descripción")<br />
                                    @foreach (var texobjetcs in comics.TextObjects) // foreach (textObjects)
                                    {
                                        <strong>Resumen:</strong><br /> @(texobjetcs.Text != string.Empty ? texobjetcs.Text : "Sin Resumen")<br />
                                        <strong>Idioma:</strong><br /> @(texobjetcs.Language != string.Empty ? texobjetcs.Language : "Sin Idioma")
                                    }
                                    <br />
                                    <strong>Personajes:</strong><br />
                                    @foreach (var characters in comics.Characters.Items) // foreach (characters)
                                    {
                                        @characters.Name <br />
                                    }
                                    <br />
                                    <strong>Autores:</strong><br />
                                    @foreach (var creators in comics.Creators.Items) // foreach (creators)
                                    {
                                        @creators.Name <br />
                                    }
                                </td>
                                <td><i class="fa fa-heart fa-2x" aria-hidden="true" id="@comics.Id" style="color: red"></i></td>
                            </tr>
                        }
                    </tbody>
                    <!-- Table body -->
                </table>
                <!-- Table  -->

            </div>

        </div>
        <!--/.Card-->

    </div>
    <!--Grid column-->

</div>
<!--Grid row-->


@section scripts {
    <!-- SCRIPTS -->
    <!-- Initializations -->
    @*<script type="text/javascript" src="~/Scripts/modules/wow.js"></script>*@
    <script type="text/javascript">
        // Animations initialization
        //new WOW().init();
        function ComicsFavoritos(id) {
            // Combine data creation and logging for efficiency
            const requestOptions = {
                idComic: id,
                idUsuario: $("#idusuario").val()
            };
            console.log("id_usuario:", requestOptions.idUsuario); // Access property directly

            const jsonData = JSON.stringify(requestOptions);

            const url = $("#urlwebapi").val() + "FavoriteComics"; // Concatenate URL with endpoint

                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: jsonData
                })
                .then(response => response.json()) // Parse the JSON response
                .then(responseData => {
                    console.log('Favoritos response:', responseData); // Log the response data
                    alert("Añadido a Favoritos");
                    $("#" + id).css("color", "red");
                })
                .catch(error => {
                    console.error('Error adding to favorites:', error);
                    // Handle specific errors (e.g., display user-friendly messages)
                });
        }

        function ComicsFavoritos2(id) {
            // Combine data creation and logging for efficiency
            const requestOptions = {
                idComic: id,
                idUsuario: $("#idusuario").val()
            };
            console.log("id_usuario:", requestOptions.idUsuario); // Access property directly

            const jsonData = JSON.stringify(requestOptions);

            // Handle potential CORS issues (not ideal for production)
            const xhr = new XMLHttpRequest();
            xhr.open("POST", $("#urlwebapi").val() + "FavoriteComics", true); // Asynchronous
            xhr.setRequestHeader("Content-Type", "application/json");

            // Handle successful response (assuming success status code)
            xhr.onload = function () {
                if (xhr.status === 200) { // Check for successful status code
                    alert("Añadido a Favoritos");
                    $("#" + id).css("color", "red");
                } else {
                    console.error("Error adding to favorites:", xhr.statusText);
                }
            };

            // Handle errors (including potential CORS errors)
            xhr.onerror = function (error) {
                console.error("Error adding to favorites:", error);
                // Consider displaying a user-friendly error message here
            };

            xhr.send(jsonData);
        }
             
    </script>

  
}